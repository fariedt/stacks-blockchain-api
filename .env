PG_HOST=127.0.0.1
PG_PORT=5490
PG_USER=postgres
PG_PASSWORD=postgres
PG_DATABASE=stacks_blockchain_api

STACKS_CORE_EVENT_PORT=3700
STACKS_CORE_EVENT_HOST=127.0.0.1

STACKS_BLOCKCHAIN_API_PORT=3999
STACKS_BLOCKCHAIN_API_HOST=127.0.0.1

STACKS_CORE_RPC_HOST=127.0.0.1
STACKS_CORE_RPC_PORT=20443

# STACKS_CORE_PROXY_HOST=127.0.0.1
# STACKS_CORE_PROXY_PORT=20443

# STACKS_FAUCET_NODE_HOST=<IP or hostname>
# STACKS_FAUCET_NODE_PORT=<port number>

## configure the chainID/networkID; testnet: 0x80000000, mainnet: 0x00000001
STACKS_CHAIN_ID=0x00000001

BTC_RPC_HOST=http://127.0.0.1
BTC_RPC_PORT=18443
BTC_RPC_USER=btc
BTC_RPC_PW=btc
BTC_FAUCET_PK=29c028009a8331358adcc61bb6397377c995d327ac0343ed8e8f1d4d3ef85c27

# The contracts used to query for inbound transactions
TESTNET_SEND_MANY_CONTRACT_ID=STR8P3RD1EHA8AA37ERSSSZSWKS9T2GYQFGXNA4C.send-many-memo
MAINNET_SEND_MANY_CONTRACT_ID=SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.send-many-memo

# Directory containing Stacks 1.0 BNS data extracted from https://storage.googleapis.com/blockstack-v1-migration-data/export-data.tar.gz
# BNS_IMPORT_DIR=/extracted/export-data-dir/

# Used to run the API without a stacks-node or postgres connection.
# In this mode, only the given rosetta endpoints are supported:
# https://www.rosetta-api.org/docs/node_deployment.html#offline-mode-endpoints .
# STACKS_API_OFFLINE_MODE=1

# Override the default file path for the proxy cache control file
# STACKS_API_PROXY_CACHE_CONTROL_FILE=/path/to/.proxy-cache-control.json

#Chain link configurations
# Oracle contract for Chainlink
TESTNET_CHAINLINK_INTERFACE_URL = http://192.168.18.42:3000/cryptocompare/
TESTNET_CHAINLINK_ORACLE_CONTRACT_ID = ST248M2G9DF9G5CX42C31DG04B3H47VJK6W73JDNC
TESTNET_CHAINLINK_ORACLE_CONTRACT_NAME = oracle
ORACLE_PAYMENT_KEY = 4773c54317d082ff5cce3976e6a2a1b691f65ab82ec59e98fe97460a922019ee01
MAINNET_CHAINLINK_INTERFACE_URL = http://192.168.18.42:3000/cryptocompare/
MAINNET_CHAINLINK_ORACLE_CONTRACT_ID = ST248M2G9DF9G5CX42C31DG04B3H47VJK6W73JDNC
MAINNET_CHAINLINK_ORACLE_CONTRACT_NAME = oracle